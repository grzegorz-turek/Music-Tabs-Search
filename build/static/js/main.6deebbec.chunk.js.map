{"version":3,"sources":["components/common/CheckMark/CheckMark.js","components/features/SearchBar/SearchBar.js","components/features/SearchItem/SearchItem.js","components/features/SearchResultsMapping/SearchResultsMapping.js","components/features/SearchResultsBox/SearchResultsBox.js","components/layout/MainLayout/MainLayout.js","containers/App.js","serviceWorker.js","index.js"],"names":["CheckMark","className","SearchBar","props","type","placeholder","aria-label","onChange","saveSearchCriteria","onKeyPress","handleKeyPressed","onClick","handleFetch","searchForTabs","player","handleToggleCheckBox","guitar","chords","bass","SearchItem","newArrFormatted","this","searchitem","tabTypes","map","item","arg","switchedFunction","join","artist","name","title","href","id","target","React","Component","SearchResultsMapping","searchResultsFiltered","key","SearchResultsBox","length","MainLayout","App","state","searchRequest","searchResults","searchResultsPrevious","fetch","then","res","json","setState","filterSearchResults","catch","err","console","log","searchResultsFilteredToArr","filter","searchResult","includes","event","value","a","bBass","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6deebbec.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport './CheckMark.scss';\r\n\r\nconst CheckMark = () => (\r\n    <div className='checkmark'>\r\n        <MdCheck />\r\n    </div>\r\n)\r\n\r\nexport default CheckMark;","import React from 'react';\r\nimport './SearchBar.scss';\r\nimport CheckMark from '../../common/CheckMark/CheckMark';\r\n\r\nconst SearchBar = (props) => (\r\n    \r\n    <div className='search-bar'>\r\n\r\n        <div className='search-bar__container'>\r\n\r\n            <div className='search-bar__container__box'>\r\n\r\n                <input\r\n                    className='search-bar__container__box__input'\r\n                    type='text'\r\n                    placeholder='artist and / or song title'\r\n                    aria-label='Type Artist Or Song Title'\r\n                    onChange={props.saveSearchCriteria}\r\n                    onKeyPress={props.handleKeyPressed}\r\n                />\r\n\r\n                <div className='search-bar__container__box__button' onClick={props.handleFetch}>\r\n                    search\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='search-bar__container__box'>\r\n                <div className='search-bar__container__box__checkbox'>\r\n                    <div className='search-bar__container__box__checkbox__box'>\r\n                        {props.searchForTabs.player ? <CheckMark /> : null }\r\n                    </div>\r\n                    <div className='search-bar__container__box__checkbox__cover' onClick={() => props.handleToggleCheckBox(0)}></div>\r\n                    <div className='search-bar__container__box__checkbox__label'>player</div>\r\n                </div>\r\n\r\n                <div className='search-bar__container__box__checkbox'>\r\n                    <div className='search-bar__container__box__checkbox__box'>\r\n                        {props.searchForTabs.guitar ? <CheckMark /> : null }\r\n                    </div>\r\n                    <div className='search-bar__container__box__checkbox__cover' onClick={() => props.handleToggleCheckBox(1)}></div>\r\n                    <div className='search-bar__container__box__checkbox__label'>guitar</div>\r\n                </div>\r\n\r\n                <div className='search-bar__container__box__checkbox'>\r\n                    <div className='search-bar__container__box__checkbox__box'>\r\n                        {props.searchForTabs.chords ? <CheckMark /> : null }\r\n                    </div>\r\n                    <div className='search-bar__container__box__checkbox__cover' onClick={() => props.handleToggleCheckBox(2)}></div>\r\n                    <div className='search-bar__container__box__checkbox__label'>chords</div>\r\n                </div>\r\n\r\n                <div className='search-bar__container__box__checkbox'>\r\n                    <div className='search-bar__container__box__checkbox__box'>\r\n                        {props.searchForTabs.bass ? <CheckMark /> : null }\r\n                    </div>\r\n                    <div className='search-bar__container__box__checkbox__cover' onClick={() => props.handleToggleCheckBox(3)}></div>\r\n                    <div className='search-bar__container__box__checkbox__label'>bass</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './SearchItem.scss';\r\n\r\nclass SearchItem extends React.Component {\r\n\r\n    render() {\r\n\r\n        const switchedFunction = (arg) => {\r\n\r\n            // eslint-disable-next-line\r\n            switch (arg) {\r\n                case 'PLAYER':\r\n                    return 'player';\r\n                    // eslint-disable-next-line\r\n                    break;\r\n                case 'TEXT_GUITAR_TAB':\r\n                    return 'guitar';\r\n                    // eslint-disable-next-line\r\n                    break;\r\n                case 'CHORDS':\r\n                    return 'chords';\r\n                    // eslint-disable-next-line\r\n                    break;\r\n                case 'TEXT_BASS_TAB':\r\n                    return 'bass';\r\n                    // eslint-disable-next-line\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            \r\n        }\r\n\r\n        const newArr = this.props.searchitem.tabTypes.map(item => switchedFunction(item));\r\n        const newArrFormatted = newArr.join(', ');\r\n\r\n        return (\r\n            <div className='search-item'>\r\n\r\n                <div className='search-item__artist'>\r\n                    <h1><b>{this.props.searchitem.artist.name}</b></h1>\r\n                </div>\r\n\r\n                <div className='search-item__title'>\r\n                    <h2>{this.props.searchitem.title}</h2>\r\n                </div>\r\n\r\n                <div className='search-item__tabs'>\r\n                    tabs available: {newArrFormatted}\r\n                </div>\r\n\r\n                <div className='search-item__link'>\r\n                    <a href={`http://www.songsterr.com/a/wa/song?id=${this.props.searchitem.id}`} target='blank'>Go to tabs!</a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SearchItem;","import React from 'react';\r\nimport SearchItem from '../SearchItem/SearchItem';\r\nimport './SearchResultsMapping.scss';\r\n\r\nconst SearchResultsMapping = (props) => (\r\n\r\n    <div className='search-results-mapping'>\r\n\r\n        {props.searchResultsFiltered.map(searchitem =>\r\n\r\n            <SearchItem\r\n                key={searchitem.id}\r\n                searchitem={searchitem} \r\n            />\r\n\r\n        )}\r\n\r\n    </div>\r\n\r\n)\r\n\r\nexport default SearchResultsMapping;","import React from 'react';\r\nimport './SearchResultsBox.scss';\r\nimport SearchResultsMapping from '../SearchResultsMapping/SearchResultsMapping';\r\n\r\nconst SearchResultsBox = (props) => (\r\n\r\n    <div className='search-results-box'>\r\n\r\n        <div className='search-results-box__container'>\r\n\r\n            <div className='search-results-box__container__items-found-count'>\r\n                {props.searchResultsFiltered.length === 0 ? `nothing found yet, enter or change search criteria` : `${props.searchResultsFiltered.length} songs found`}\r\n            </div>\r\n\r\n            <SearchResultsMapping searchResultsFiltered={props.searchResultsFiltered} />\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n)\r\n\r\nexport default SearchResultsBox;","import React from 'react';\r\nimport SearchBar from '../../features/SearchBar/SearchBar';\r\nimport SearchResultsBox from '../../features/SearchResultsBox/SearchResultsBox';\r\n\r\nconst MainLayout = (props) => (\r\n\r\n    <div className='main-layout'>\r\n\r\n        <SearchBar\r\n            saveSearchCriteria={props.saveSearchCriteria}\r\n            handleToggleCheckBox={(arg) => props.handleToggleCheckBox(arg)}\r\n            handleKeyPressed={props.handleKeyPressed}\r\n            handleFetch={props.handleFetch}\r\n            searchForTabs={props.searchForTabs}\r\n        />\r\n\r\n        <SearchResultsBox\r\n            searchResultsFiltered={props.searchResultsFiltered}\r\n            searchForTabs={props.searchForTabs}\r\n        />\r\n\r\n    </div>\r\n)\r\n\r\nexport default MainLayout;","import React from 'react';\nimport MainLayout from '../components/layout/MainLayout/MainLayout';\n\nclass App extends React.Component {\n\n    state = {\n        searchRequest: [],\n        searchResults: [],\n        searchResultsPrevious: [],\n        searchResultsFiltered: [],\n        searchForTabs: {\n            player: true,\n            guitar: false,\n            chords: false,\n            bass: false\n        }\n    }\n\n    handleFetch = () => {\n\n        if (this.state.searchRequest) {\n\n            // ------------- UNCOMMENT THE LINE BELOW IF CORS PROBLEM ENCOUNTERED -------------\n            //const corsUrl = 'https://cors-anywhere.herokuapp.com/';\n\n            const apiUrl = 'https://www.songsterr.com/a/ra/songs.json?pattern=';\n\n            // ------------- UNCOMMENT THE PART BELOW IF CORS PROBLEM ENCOUNTERED -------------\n            fetch(/*corsUrl + */apiUrl + this.state.searchRequest)\n            .then(res => res.json())\n            .then(res => this.setState({ searchResults: res }))\n            .then(() => this.filterSearchResults())\n\n            .catch(err => {\n                console.log('We\\'ve got fetch error Madam or Sir')\n            })\n\n        }\n\n    }\n\n    filterSearchResults = () => {\n\n        const searchResultsFilteredToArr = this.state.searchResults.filter(searchResult =>\n\n            (this.state.searchForTabs.player ? (searchResult.tabTypes).includes('PLAYER') : false) ||\n            (this.state.searchForTabs.guitar ? (searchResult.tabTypes).includes('TEXT_GUITAR_TAB') : false) ||\n            (this.state.searchForTabs.chords ? (searchResult.tabTypes).includes('CHORDS') : false) ||\n            (this.state.searchForTabs.bass ? (searchResult.tabTypes).includes('TEXT_BASS_TAB') : false)\n\n        );\n        this.setState({ searchResultsFiltered: searchResultsFilteredToArr})\n\n    }\n\n    saveSearchCriteria = (event) => {\n        this.setState( { searchRequest : event.target.value});\n    }\n\n    handleToggleCheckBox = async (arg) => {\n\n        switch(arg) {\n\n            case 0:\n                await this.setState( !this.state.searchForTabs.player ? { searchForTabs: { player: true, guitar: false, chords: false, bass: false } } : null );\n                break;\n            case 1:\n                await this.setState( !this.state.searchForTabs.guitar ? { searchForTabs : { player: false, guitar: true, chords: false, bass: false } } : null );\n                break;\n            case 2:\n                await this.setState( !this.state.searchForTabs.chords ? { searchForTabs : { player: false, guitar: false, chords: true, bass: false } } : null );\n                break;\n            case 3:\n                await this.setState( !this.state.searchForTabs.bBass ? { searchForTabs : { player: false, guitar: false, chords: false, bass: true } } : null );\n                break;\n            default:\n                return;\n\n        }\n        this.filterSearchResults();\n\n    };\n\n    handleKeyPressed = (event) => {\n\n        if (event.key === \"Enter\") {\n\n            if (this.state.searchRequest && this.state.searchRequest === event.target.value) {\n                this.handleFetch();\n            }\n\n        }\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MainLayout\n                    saveSearchCriteria={this.saveSearchCriteria}\n                    handleToggleCheckBox={(arg) => this.handleToggleCheckBox(arg)}\n                    handleKeyPressed={this.handleKeyPressed}\n                    handleFetch={this.handleFetch}\n                    searchForTabs={this.state.searchForTabs}\n                    searchResultsFiltered={this.state.searchResultsFiltered}\n                />\n\n            </div>\n\n        )\n\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}